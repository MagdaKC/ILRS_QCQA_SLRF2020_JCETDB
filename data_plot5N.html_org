<!DOCTYPE html>
<html>
<head>
       <!-- 1. Add these JavaScript inclusions in the head of your page -->
  <link rel="stylesheet" href="css/butt.css" type="text/css" />
<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css" />
    <script src="http://code.jquery.com/jquery-1.8.2.js"></script>
    <script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>
        <!-- highcharts-->
<script src="http://code.highcharts.com/stock/highstock.js"></script>
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/highcharts-more.js"></script>
    <script src="http://code.highcharts.com/modules/exporting.js"></script>

<?
include_once('./common.php');
dl_local('pgsql_new.so');
$t=time();
$tt=date("d-M-Y H:i");
$t=date("H:i",$t);

$combination_center = $_POST[combination_center];
$analysis_center = $_POST[analysis_center];
$plot= $_POST[PLOTS2];
$start_date=$_POST['start_date'];
$end_date=$_POST['end_date'];
$y_min=$_POST['y_min'];
$y_max=$_POST['y_max'];

//SYMBOLS
    $mm="radius:2";
    if ($_POST[marktype0]=="circle_e")
{$marktype0="circle";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}
if ($_POST[marktype0]=="square_e")
{$marktype0="square";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}
	if ($_POST[marktype0]=="diamond_e")
{$marktype0="diamond";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

	if ($_POST[marktype0]=="triangle_e")
{$marktype0="triangle";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

	if ($_POST[marktype0]=="triangle-down_e")
{$marktype0="triangle-down";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

	if ($_POST[marktype1]=="circle_e")
{$marktype1="circle";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}
	if ($_POST[marktype1]=="square_e")
{$marktype1="square";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype1]=="diamond_e")
{$marktype1="diamond";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype1]=="triangle_e")
{$marktype1="triangle";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype1]=="triangle-down_e")
{$marktype1="triangle-down";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		if ($_POST[marktype2]=="circle_e")
{$marktype2="circle";
	$mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}
	if ($_POST[marktype2]=="square_e")
{$marktype2="square";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype2]=="diamond_e")
{$marktype2="diamond";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype2]=="triangle_e")
{$marktype2="triangle";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}

		    if ($_POST[marktype2]=="triangle-down_e")
{$marktype2="triangle-down";
	    $mm="radius:2,fillColor: 'transparent',lineWidth: 1, lineColor: null";}
// SCALE defult
if ($_POST['y_max']=="Max" or $_POST['y_max']=="")
{
if ($_POST[PLOTS2]=="Scale")
{$y_max="null";}
if($_POST[PLOTS2]=="Scale_COM" )
{$y_max="null";}
if($_POST[PLOTS2]=="GRMS")
{$y_max="null";}
if($_POST[PLOTS2]=="CRMS")
{$y_max="null";}
}
if ($_POST['y_min']=="Min" or $_POST['y_min']=="")
{if ($_POST[PLOTS2]=="Scale")
{$y_min="null";}
if($_POST[PLOTS2]=="Scale_COM" )
{$y_min="null";}
if($_POST[PLOTS2]=="GRMS")
{$y_min="null";}
if($_POST[PLOTS2]=="CRMS")
{$y_min="null";}
}
$Legend="false";
$color0=$_POST['color0'];
$color1=$_POST['color1'];
$color2=$_POST['color2'];
$marktype0=$_POST['marktype0'];
$marktype1=$_POST['marktype1'];
$marktype2=$_POST['marktype2'];



if ($_POST[PLOTS2]=="Scale")
{$tab = "$_POST[combination_center]_info_$_POST[analysis_center]";
$type="SCALE [ppb]";
$title1="vs SLRF2008";
$plota="scal";
$plotaa="SCALE";
$splota="scals";
$title1="SCALE wrt SLRF2008 AC($analysis_center) CC($combination_center)"; } 
if($_POST[PLOTS2]=="Scale_COM" )
{$tab = "$_POST[combination_center]_helemrtinfo_$_POST[analysis_center]";
$type="SCALE [ppb]";
$plota="scale";
$plotaa="SCALE";
$splota="scales";
$title1="SCALE wrt COMBINED SOLUTION  AC($analysis_center) CC($combination_center)";}
if($_POST[PLOTS2]=="GRMS")
{$tab = "$_POST[combination_center]_info_$_POST[analysis_center]";
$type="Global WRMS [mm]";
$title1="vs SLRF2008";
$plota="grms";
$plotaa="WRMS";
$title1="GLOBAL WRMS wrt SLRF2008 AC($analysis_center) CC($combination_center)";}

if($_POST[PLOTS2]=="CRMS")
{$tab = "$_POST[combination_center]_info_$_POST[analysis_center]";
$type="Core WRMS [mm]";
$title1="vs SLRF2008";
$plota="crms";
$plotaa="CRMS";
$title1=" Core WRMS wrt SLRF2008 AC($analysis_center) CC($combination_center)";}


if ($_POST[combination_center]=="ilrsa")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsa user=jasongroup  connect_timeout=2";}
if ($_POST[combination_center]=="ilrsb")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsb user=jasongroup  connect_timeout=2";}
$db_handle = pg_connect($conn_string);
if ($_POST[combination_center]=="ilrsb")
{if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
{$queryS1 = "SELECT distinct STDDEV ($plota *1000 ) from $tab where observation_date >= '$start_date' and observation_date < '$end_date' ;";}
else
{$queryS1 = "SELECT distinct STDDEV ($plota ) from $tab where observation_date >= '$start_date' and observation_date < '$end_date' ;";}}
if ($_POST[combination_center]=="ilrsa")
{$queryS1 = "SELECT distinct STDDEV ($plota)  from $tab where  observation_date >= '$start_date' and observation_date < '$end_date' ;";}
//echo $queryS1.'<br/>';
$resultS1 = pg_query($queryS1) or die("" );
$std1 = pg_fetch_array($resultS1, 0, PGSQL_NUM);
$std1=number_format($std1[0], 2, '.', '');
//echo $std1.'<br/>';
//echo $std2.'<br/>';
//echo $std3.'<br/>';
$limita1=$std1*3.5;
$limitb1=$std1*(-3.5);
//echo $limita1.'<br/>';
//echo $limitb1.'<br/>';


if ($_POST[combination_center]=="ilrsa")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsa user=jasongroup  connect_timeout=2";
$query1 = "SELECT EXTRACT(EPOCH from observation_date at time zone 'utc-00') *1000 as datetime1, $plota as value1, $splota as value2 from $tab where observation_date > '$start_date' and observation_date < '$end_date' and $plota  < $limita1 and $plota > $limitb1 ;";}
if ($_POST[combination_center]=="ilrsb")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsb user=jasongroup  connect_timeout=2";}
$query1 = "SELECT EXTRACT(EPOCH from observation_date at time zone 'utc-00') *1000 as datetime1, $plota as value1, $splota as value2 from $tab where observation_date > '$start_date' and observation_date < '$end_date' and $plota  < $limita1 and $plota > $limitb1 ;";

$db_handle = pg_connect($conn_string);

//echo $query1.'<br/><br/>';
if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
{if ($_POST[combination_center]=="ilrsa")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsa user=jasongroup  connect_timeout=2";
$query1 = "SELECT EXTRACT(EPOCH from observation_date at time zone 'utc-00') *1000 as datetime1, $plota as value1 from $tab where observation_date > '$start_date' and observation_date < '$end_date' and $plota  < $limita1 and $plota > $limitb1 ;"; }
if ($_POST[combination_center]=="ilrsb")
{$conn_string = "host=perseus.rs.umbc.edu port=5432 dbname=ilrsb user=jasongroup  connect_timeout=2";
$query1 = "SELECT EXTRACT(EPOCH from observation_date at time zone 'utc-00') *1000 as datetime1, $plota *1000 as value1 from $tab where observation_date > '$start_date' and observation_date < '$end_date' and $plota *1000  < $limita1 and $plota *1000 > $limitb1 ;";}}

//echo $query1.'<br/><br/>';
$result = pg_query($query1) or die("" );
$data1 = array();
$data2 = array();
while ($row = pg_fetch_array($result, null, PGSQL_ASSOC)) {
$datetime = $row['datetime1'];
//
$val1  = $row['value1'];
$val2  = $row['value2'];

$val3 = $val1  + $val2;
$val4 = $val1  - $val2;
//
 $data1[] = "[$datetime, $val1]";
 $data2[] = "[ $datetime,  $val3,  $val4]";
}
//print_r($data2);
if ($_POST[combination_center]=="ilrsa")
{$queryS = "SELECT distinct AVG ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}

if ($_POST[combination_center]=="ilrsb")
{if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
{$queryS = "SELECT distinct AVG ($plota *1000)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  *1000 < $limita1 and $plota  *1000 > $limitb1 ;";}
else
{$queryS = "SELECT distinct AVG ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}}

//echo $queryS.'<br/><br/>';
$resultS = pg_query($queryS) or die("" );
$avg = pg_fetch_array($resultS, 0, PGSQL_NUM);

if ($_POST[combination_center]=="ilrsa")
{$queryS = "SELECT count ($plota) from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}

if ($_POST[combination_center]=="ilrsb")
{if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
{$queryS = "SELECT count ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  *1000 < $limita1 and $plota  *1000 > $limitb1 ;";}
else
{$queryS = "SELECT count ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}}

//echo $queryS.'<br/><br/>';
$resultS = pg_query($queryS) or die("" );
$num = pg_fetch_array($resultS, 0, PGSQL_NUM);



if ($_POST[combination_center]=="ilrsa")
{$queryS = "SELECT distinct STDDEV ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}

if ($_POST[combination_center]=="ilrsb")
{if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
{$queryS = "SELECT distinct STDDEV ($plota *1000)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  *1000 < $limita1 and $plota  *1000 > $limitb1 ;";}
else
{$queryS = "SELECT distinct STDDEV ($plota)  from $tab where  observation_date > '$start_date' and observation_date < '$end_date'  and $plota  < $limita1 and $plota > $limitb1 ;";}}

//echo $queryS.'<br/><br/>';
$resultS = pg_query($queryS) or die("" );
$std = pg_fetch_array($resultS, 0, PGSQL_NUM);

$avg=number_format($avg[0],3);
$std=number_format($std[0],2);
$num=number_format($num[0],0);
$tilte=" $plotaa $avg \u00B1 $std ";
//$newfile="/tmp/${plota}_$t.txt";
$newfile="/tmp/${plot}_${combination_center}_${analysis_center}_$t.txt";
$newfileE="${plot}_${combination_center}_${analysis_center}";
if(file_exists("$newfile")) unlink("$newfile");
unlink($newfile);
$file = fopen ($newfile, "a");
?>
<?php
session_start();
//session_register('filename');
$_SESSION['type'] = $type; // store session data
$_SESSION['views'] = $newfilea; // store session data
$_SESSION['filename'] = $newfile; // store session data
$_SESSION['filenamea'] = $newfilea; // store session data
//echo "Pageviews = ". $_SESSION['views']; //retrieve data
////echo "Pag = ". $_SESSION['filename']; //retrieve data
?>
<script>
    //Wait until the document is ready to be processed.
    jQuery(document).ready(function()
    {
        //Init your dialog box.
        $("#dialog").dialog({autoOpen:false,
    position: [1000, 100],
    resizable: false,width: 200});

        //Attach you click handler to the button.
        $("#opener").click(function(event)
        {
            //Stop any default actions on the button.
            event.preventDefault();
            //Open your dialog.
            $("#dialog").dialog("open");
        });
    });
    </script>
<script>
    //Wait until the document is ready to be processed.
    jQuery(document).ready(function()
    {
        //Init your dialog box.
        $("#dialog2").dialog({autoOpen:false,
    position: [1000, 300],
    resizable: false,width: 200});

        //Attach you click handler to the button.
        $("#opener2").click(function(event)
        {
            //Stop any default actions on the button.
            event.preventDefault();
            //Open your dialog.
            $("#dialog2").dialog("open");
        });
    });
    </script>
<script>
    //Wait until the document is ready to be processed.
    jQuery(document).ready(function()
    {
        //Init your dialog box.
        $("#dialog3").dialog({autoOpen:false,
    position: [1000, 400],
    resizable: false,width: 200});

        //Attach you click handler to the button.
        $("#opener3").click(function(event)
        {
            //Stop any default actions on the button.
            event.preventDefault();
            //Open your dialog.
            $("#dialog3").dialog("open");
        });
    });
    </script>
<script>
$(function () {
window.chart = new Highcharts.StockChart({
        chart: {
            renderTo: 'container',
                events: {
                    redraw: function () {
                        var series = this.series[0];
                        var dataY = {value: 0, count: 0};
                        var points = series.points;
                         ppp=0;
                        for (var i = 0; i < points.length; i++) {
                               dataY.value += points[i].y;
                           dataY.count +=1;
                       }
                        MEAN=dataY.value/dataY.count;

                        for (var i = 0; i < points.length; i++) {
                            dataY.value2 = (points[i].y-MEAN)*(points[i].y-MEAN);
                                pp=dataY.value2;
                                ppp=ppp+pp;
                       }

MEAN=dataY.value/dataY.count;
pp2=ppp/dataY.count;
STD2=Math.sqrt(pp2);
var STD2 = STD2.toFixed(2);
var MEAN = MEAN.toFixed(2);
$('.MEAN').text(MEAN);
$('.STD').html(STD2);
var html = "";
                html += "<span>STD: " + STD2 + " </span><br />" + " MEAN: " + MEAN + " </span><br />"+ " # of point: " +  dataY.count + " </span><br />";
            $("#dialog").html(html == "" ? "No results" : html);
// $report.html( 'avgX: ' + dataX.value / dataX.count);
                    }
                }
        },

       xAxis : {labels: { style: { color: '#000000', fontSize: '10px' } },
                gridLineWidth: 1,
ordinal: false,
                type : 'datetime',
title: { text: 'DATE',style: { color: '#000000', fontSize: '12px' } },
                maxZoom : 1 * 24 * 3600000 // 1day
        },
tooltip: {
	    	formatter: function() {
				var s = '<b>'+ Highcharts.dateFormat('%A, %b %e, %Y', this.x) +'</b>' + '<br/> '+ '<?php echo $plotaaa ?>'  + this.y + '<br/> ';

            
				return s;
			}
	    },
yAxis: {labels: { style: { color: '#000000', fontSize: '9px' } },endOnTick: false, startOnTick: false,
 title: { text: '<?php echo $plotaaa ?> <?php echo $type ?>',style: { color: '#000000', fontSize: '10px' } }, min: <?php echo $y_min ?> , max: <?php echo $y_max ?>},
navigator: {outlineColor: '<?php echo $color0 ?>',outlineWidth: 2, series: { color: '<?php echo $color1 ?>' } },
rangeSelector: { buttons: [{ type: 'day', count: 3, text: '3d' },
                                             { type: 'week', count: 1, text: '1w' },
                                             { type: 'month', count: 1, text: '1m' },
                                             { type: 'month', count: 6, text: '6m' },
                                             { type: 'year', count: 1, text: '1y' },
                                             { type: 'all', text: 'All' }],
                                             selected: 5 },
title: {
text: '<?php echo $title1 ?> ',
            margin: 20
        },
series : [
{ lineWidth : 0, name: '<?php echo $plotaaa ?>  <?php echo $station_name ?>' , showInLegend: true, marker: {enabled : true, symbol: '<?php echo $marktype1 ?>',<?php echo $mm ?> }, color: '<?php echo $color1 ?>', data: [<?php echo join($data1, ',') ?>] },
{type: 'errorbar',color: '<?php echo $color1 ?>', data: [<?php echo join($data2, ',') ?>] },

]
,exporting: {filename: '<?php echo $newfileE1 ?>'}
    });
});
$(function () {
window.chart2 = new Highcharts.StockChart({
        chart: {
            renderTo: 'container2',
                events: {
                    redraw: function () {
                        var series = this.series[0];
                        var dataY = {value: 0, count: 0};
                        var points = series.points;
                         ppp=0;
                        for (var i = 0; i < points.length; i++) {
                               dataY.value += points[i].y;
                           dataY.count +=1;
                       }
                        MEAN=dataY.value/dataY.count;

                        for (var i = 0; i < points.length; i++) {
                            dataY.value2 = (points[i].y-MEAN)*(points[i].y-MEAN);
                                pp=dataY.value2;
                                ppp=ppp+pp;
                       }

MEAN=dataY.value/dataY.count;
pp2=ppp/dataY.count;
STD2=Math.sqrt(pp2);
var STD2 = STD2.toFixed(2);
var MEAN = MEAN.toFixed(2);
$('.MEAN').text(MEAN);
$('.STD').html(STD2);
var html = "";
                html += "<span>STD: " + STD2 + " </span><br />" + " MEAN: " + MEAN + " </span><br />"+ " # of point: " +  dataY.count + " </span><br />";
            $("#dialog2").html(html == "" ? "No results" : html);
// $report.html( 'avgX: ' + dataX.value / dataX.count);
                    }
                }
        },

       xAxis : {labels: { style: { color: '#000000', fontSize: '10px' } },
                gridLineWidth: 1,
ordinal: false,
                type : 'datetime',
title: { text: 'DATE',style: { color: '#000000', fontSize: '12px' } },
                maxZoom : 1 * 24 * 3600000 // 1day
        },
tooltip: {
            formatter: function() {
                var s = '<b>'+ Highcharts.dateFormat('%A, %b %e, %Y', this.x) +'</b>' + '<br/> '+ '<?php echo $plotbbb ?>'  + this.y + '<br/> ';


                return s;
            }
        },
yAxis: {labels: { style: { color: '#000000', fontSize: '9px' } },endOnTick: false, startOnTick: false,
 title: { text: '<?php echo $plotbbb ?> <?php echo $type ?>', style: { color: '#000000', fontSize: '10px' } }, min: <?php echo $y_min ?> , max: <?php echo $y_max ?>},

navigator: {outlineColor: '<?php echo $color1 ?>',outlineWidth: 2, series: { color: '<?php echo $color1 ?>' } },
rangeSelector: { buttons: [{ type: 'day', count: 3, text: '3d' },
                                             { type: 'week', count: 1, text: '1w' },
                                             { type: 'month', count: 1, text: '1m' },
                                             { type: 'month', count: 6, text: '6m' },
                                             { type: 'year', count: 1, text: '1y' },
                                             { type: 'all', text: 'All' }],
                                             selected: 5 },
title: {
text: '<?php echo $title1 ?> ',
            margin: 20
        },
series : [
{ lineWidth : 0, name: '<?php echo $plotaaa ?>  <?php echo $station_name ?>' , showInLegend: true, marker: {enabled : true, symbol: '<?php echo $marktype1 ?>',<?php echo $mm ?> }, color: '<?php echo $color1 ?>', data: [<?php echo join($data3, ',') ?>] },
{type: 'errorbar',color: '<?php echo $color1 ?>', data: [<?php echo join($data4, ',') ?>] },

]
,exporting: {filename: '<?php echo $newfileE2 ?>'}
    });
});
$(function () {
window.chart3 = new Highcharts.StockChart({
        chart: {
            renderTo: 'container3',
                events: {
                    redraw: function () {
                        var series = this.series[0];
                        var dataY = {value: 0, count: 0};
                        var points = series.points;
                         ppp=0;
                        for (var i = 0; i < points.length; i++) {
                               dataY.value += points[i].y;
                           dataY.count +=1;
                       }
                        MEAN=dataY.value/dataY.count;

                        for (var i = 0; i < points.length; i++) {
                            dataY.value2 = (points[i].y-MEAN)*(points[i].y-MEAN);
                                pp=dataY.value2;
                                ppp=ppp+pp;
                       }

MEAN=dataY.value/dataY.count;
pp2=ppp/dataY.count;
STD2=Math.sqrt(pp2);
var STD2 = STD2.toFixed(2);
var MEAN = MEAN.toFixed(2);
$('.MEAN').text(MEAN);
$('.STD').html(STD2);
var html = "";
                html += "<span>STD: " + STD2 + " </span><br />" + " MEAN: " + MEAN + " </span><br />"+ " # of point: " +  dataY.count + " </span><br />";
            $("#dialog3").html(html == "" ? "No results" : html);
// $report.html( 'avgX: ' + dataX.value / dataX.count);
                    }
                }
        },
       xAxis : {labels: { style: { color: '#000000', fontSize: '10px' } },
                gridLineWidth: 1,
ordinal: false,
                type : 'datetime',
title: { text: 'DATE',style: { color: '#000000', fontSize: '12px' } },
                maxZoom : 1 * 24 * 3600000 // 1day
        },
tooltip: {
            formatter: function() {
                var s = '<b>'+ Highcharts.dateFormat('%A, %b %e, %Y', this.x) +'</b>' + '<br/> '+ '<?php echo $plotccc ?>'  + this.y + '<br/> ';


                return s;
            }
        },
yAxis: {labels: { style: { color: '#000000', fontSize: '9px' } },endOnTick: false, startOnTick: false,
 title: { text: '<?php echo $plotccc ?> <?php echo $type ?>', style: { color: '#000000', fontSize: '10px' } }, min: <?php echo $y_min ?> , max: <?php echo $y_max ?>},

navigator: {outlineColor: '<?php echo $color2 ?>',outlineWidth: 2, series: { color: '<?php echo $color2 ?>' } },
rangeSelector: { buttons: [{ type: 'day', count: 3, text: '3d' },
                                             { type: 'week', count: 1, text: '1w' },
                                             { type: 'month', count: 1, text: '1m' },
                                             { type: 'month', count: 6, text: '6m' },
                                             { type: 'year', count: 1, text: '1y' },
                                             { type: 'all', text: 'All' }],
                                             selected: 5 },
serie : [
{ lineWidth : 0, name: '<?php echo $plotccc ?>  <?php echo $station_name ?>' , showInLegend: true, marker: {enabled : true, symbol: '<?php echo $marktype2 ?>',<?php echo $mm ?> }, color: '<?php echo $color2 ?>', data: [<?php echo join($data5, ',') ?>] },
{type: 'errorbar',color: '<?php echo $color2 ?>', data: [<?php echo join($data6, ',') ?>] },

]
,exporting: {filename: '<?php echo $newfileE3 ?>'}
    });
});
</script>
</head>
<body>
    <div id="container" style="border: 2px solid #a5d2ff;width: 1000px; height: 400px"></div>
<div id="dialog" title="STATISTIC <?php echo $plotaaa ?> <?php echo $type ?>" class="ui-dialog">
STD: <?php echo $std ?> <br/>
MEAN: <?php echo $avg ?> <br/>
# of points: <?php echo $num ?> </div>
<button id="opener" class="Web_OnlineTools">STATISTIC <?php echo $plotaaa ?> <?php echo $type ?></button>
<br/>
  </div>
</body>
</html>

<?php
// to file
{ $query2 = "SELECT observation_date as datetime2, to_char($plota, '999999D99') as value from $tab where observation_date > '$start_date' and observation_date < '$end_date' ORDER BY observation_date ;"; }
if ($_POST[combination_center]=="ilrsb")
if($_POST[PLOTS2]=="GRMS" or $_POST[PLOTS2]=="CRMS")
 {{$query2 = "SELECT observation_date as datetime2, to_char($plota *1000, '999999D99') as value from $tab where observation_date > '$start_date' and observation_date < '$end_date' ORDER BY observation_date ;"; }}
else
{ $query2 = "SELECT observation_date as datetime2, to_char($plota, '999999D99') as value from $tab where observation_date > '$start_date' and observation_date < '$end_date' ORDER BY observation_date ;"; }

//echo $query2.'<br/><br/>';
$result = pg_query($query2) or die("" );
$data = array();
$output= $tt. "\n";
fwrite($file, $output);
$output ="  DATE     |" ;
fwrite($file, $output); 
$output= $_SESSION['type']. "\n";
fwrite($file, $output); 
while ($row = pg_fetch_array($result, null, PGSQL_ASSOC)) {
//echo $datetime;
//echo $row['value'];
//echo      $row['datetime2'] . "," . $row['value2']. "\n";
$output = $row['datetime2'] . " | " . $row['value']. "\n";
fwrite($file, $output);
}
fclose ($file);
?>
